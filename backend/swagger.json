{
  "openapi": "3.0.3",
  "info": {
    "title": "Common-Cash - OpenAPI",
    "description": "the ambitious project to facilitate the management of shared expenses within a group. The main objective of this project is to develop a web/mobile application that will enable users to maintain financial balance within their social circle.\n You can find out more about\nSwagger at [https://swagger.io](https://swagger.io).",
    "termsOfService": "#",
    "contact": {
      "email": "mayoujord@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "#"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Common-Cash",
    "url": "#"
  },
  "servers": [
    {
      "url": "#"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User-related operations",
      "externalDocs": {
        "description": "Find out more",
        "url": "#"
      }
    },
    {
      "name": "Auths",
      "description": "User-related operations",
      "externalDocs": {
        "description": "Find out more",
        "url": "#"
      }
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Create user",
        "description": "Allows a user to register with a new account.",
        "operationId": "register",
        "tags": ["Users"],
        "requestBody": {
          "description": "Registration information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration."
          },
          "400": {
            "description": "Invalid registration data."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Retrieve user list",
        "description": "Retrieves the complete list of users.",
        "tags": ["Users"],
        "operationId": "getAllUsers",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - User list."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieve a user by ID",
        "description": "Retrieves details of a specific user by ID.",
        "tags": ["Users"],
        "operationId": "getUserById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID de l'utilisateur",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - User details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      },
      "put": {
        "summary": "Update user information",
        "description": "Update information for a specific user.",
        "tags": ["Users"],
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New user information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update."
          },
          "400": {
            "description": "Invalid update data."
          },
          "500": {
            "description": "server error."
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "tags": ["Users"],
        "operationId": "deleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID de l'utilisateur",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - User details."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": "user123"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "example": "hashedPassword"
          },
          "provider": {
            "type": "string",
            "example": "standard"
          },
          "iv": {
            "type": "string",
            "example": "initializationVector"
          },
          "authTokens": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "authToken": {
                  "type": "string",
                  "example": "token123"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-02T15:30:00Z"
          }
        },
        "xml": {
          "name": "User"
        }
      }
    }
  }
}


